version: '3'

vars:
  BINARY: bin/banner_rotation
  API: api
  MIGRATIONS: migrations
  DB: postgres
  DSN: host=localhost user=danny password=danny dbname=rotation sslmode=disable
  GIT_HASH: $(git log --format="%h" -n 1)
  LDFLAGS: -X main.release="develop" -X main.buildDate=$(date -u +%Y-%m-%dT%H:%M:%S) -X main.gitHash={{.GIT_HASH}}
  DOCKER_IMG: "rotation:develop"
  LOCAL_CONFIG_PATH: configs/without-compose-config.yaml

tasks:
  default:
    - task: build

  local:build:
    desc: Build the go binary locally
    cmds:
      - go build -v -o {{.BINARY}} -ldflags "{{.LDFLAGS}}" ./cmd

  local:run:
    desc: Run the banner_rotation service with default config(from configs directory) locally
    deps: [ local:build ]
    cmds:
      - ./{{.BINARY}} --config=./{{.LOCAL_CONFIG_PATH}}

  docker:build:
    desc: Build docker image of service
    cmds:
      - docker-compose build --no-cache

  docker:run:
    deps: [ docker:build ]
    desc: Runs the banner rotation service with all required environment(db, redis) in docker via docker-compose
    cmds:
      - docker-compose up -d

  docker:stop:
    desc: Stop the banner_rotation service in docker
    cmds:
      - docker-compose down

  build:
    desc: Alias for local:build command
    cmds:
      - task: local:build

  run:
    desc: Alias for docker:run command.
    cmds:
      - task: docker:run

  stop:
    desc: Alias for docker:stop command.
    cmds:
      - task: docker:stop

  clean:
    desc: Clean binary directory
    cmds:
      - rm -rf bin

  lint:
    desc: Lint project
    deps: [ install-lint-deps ]
    cmds:
      - golangci-lint {{.CLI_ARGS}} run ./...

  install-lint-deps:
    desc: Install lint dependencies
    cmds:
      - (which golangci-lint > /dev/null) || curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1

  test:
    desc: Run test with race detector
    cmds:
      - go test -race -count 100 ./...

  generate:
    desc: Generate all required for project build code generated sources
    cmds:
      - go generate -x ./...

  migrations:up:
    desc: Apply all migrations from migrations dir
    cmds:
      - goose -dir {{.MIGRATIONS}} {{.DB}} "{{.DSN}}" up

  migrations:down:
    desc: Rollback all migrations from migrations dir
    cmds:
      - goose -dir {{.MIGRATIONS}} {{.DB}} "{{.DSN}}" down

  evans:
    desc: Start evans grpc (https://github.com/ktr0731/evans) client
    cmds:
      - evans {{.API}}/*.proto --port=50051